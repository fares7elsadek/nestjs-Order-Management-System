// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId   String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  address  String
  orders   Order[]
  cart     Cart?
}

model Order {
  orderId   String      @id @default(uuid())
  orderDate DateTime    @default(now())
  status    OrderStatus
  user      User        @relation(fields: [user_id], references: [userId])
  user_id   String
  products  OrderProduct[]
}

model OrderProduct {
  orderProductId String  @id @default(uuid())
  orderId        String
  productId      String
  order          Order   @relation(fields: [orderId], references: [orderId])
  product        Product @relation(fields: [productId], references: [productId])
  quantity       Int
}

model Product {
  productId   String  @id @default(uuid())
  name        String
  price       Decimal
  description String
  stock       Int
  orderProducts OrderProduct[]
  cartProducts  CartProduct[]
}

model Cart {
  cartId   String    @id @default(uuid())
  user     User      @relation(fields: [user_id], references: [userId])
  user_id  String    @unique
  cartProducts CartProduct[]
}

model CartProduct {
  cartProductId String  @id @default(uuid())
  cartId        String
  productId     String
  cart          Cart     @relation(fields: [cartId], references: [cartId])
  product       Product  @relation(fields: [productId], references: [productId])
  quantity      Int

  @@unique([cartId, productId])
}

enum OrderStatus {
  PENDING // Order has been created but not yet processed
  CONFIRMED // Order has been confirmed by the admin
  DELIVERED // Order has been delivered to the customer
  CANCELED // Order has been canceled by the customer or admin
}
